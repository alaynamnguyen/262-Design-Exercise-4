# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

import chat_pb2 as Chat__pb2

GRPC_GENERATED_VERSION = '1.70.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in Chat_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class ChatServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.LoginUsername = channel.unary_unary(
                '/chat.ChatService/LoginUsername',
                request_serializer=Chat__pb2.LoginUsernameRequest.SerializeToString,
                response_deserializer=Chat__pb2.LoginUsernameResponse.FromString,
                _registered_method=True)
        self.LoginPassword = channel.unary_unary(
                '/chat.ChatService/LoginPassword',
                request_serializer=Chat__pb2.LoginPasswordRequest.SerializeToString,
                response_deserializer=Chat__pb2.LoginPasswordResponse.FromString,
                _registered_method=True)
        self.DeleteAccount = channel.unary_unary(
                '/chat.ChatService/DeleteAccount',
                request_serializer=Chat__pb2.DeleteAccountRequest.SerializeToString,
                response_deserializer=Chat__pb2.DeleteAccountResponse.FromString,
                _registered_method=True)
        self.ListAccounts = channel.unary_unary(
                '/chat.ChatService/ListAccounts',
                request_serializer=Chat__pb2.ListAccountsRequest.SerializeToString,
                response_deserializer=Chat__pb2.ListAccountsResponse.FromString,
                _registered_method=True)
        self.SendMessage = channel.unary_unary(
                '/chat.ChatService/SendMessage',
                request_serializer=Chat__pb2.SendMessageRequest.SerializeToString,
                response_deserializer=Chat__pb2.SendMessageResponse.FromString,
                _registered_method=True)
        self.GetSentMessages = channel.unary_unary(
                '/chat.ChatService/GetSentMessages',
                request_serializer=Chat__pb2.GetMessagesRequest.SerializeToString,
                response_deserializer=Chat__pb2.GetMessagesResponse.FromString,
                _registered_method=True)
        self.GetReceivedMessages = channel.unary_unary(
                '/chat.ChatService/GetReceivedMessages',
                request_serializer=Chat__pb2.GetMessagesRequest.SerializeToString,
                response_deserializer=Chat__pb2.GetMessagesResponse.FromString,
                _registered_method=True)
        self.GetMessageByMid = channel.unary_unary(
                '/chat.ChatService/GetMessageByMid',
                request_serializer=Chat__pb2.GetMessageRequest.SerializeToString,
                response_deserializer=Chat__pb2.GetMessageResponse.FromString,
                _registered_method=True)
        self.MarkMessageRead = channel.unary_unary(
                '/chat.ChatService/MarkMessageRead',
                request_serializer=Chat__pb2.MarkMessageReadRequest.SerializeToString,
                response_deserializer=Chat__pb2.MarkMessageReadResponse.FromString,
                _registered_method=True)
        self.DeleteMessages = channel.unary_unary(
                '/chat.ChatService/DeleteMessages',
                request_serializer=Chat__pb2.DeleteMessagesRequest.SerializeToString,
                response_deserializer=Chat__pb2.DeleteMessagesResponse.FromString,
                _registered_method=True)


class ChatServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def LoginUsername(self, request, context):
        """Login flow
        login-username -> login-username-reply
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LoginPassword(self, request, context):
        """login-password -> login-password-reply
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteAccount(self, request, context):
        """Account flow
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListAccounts(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SendMessage(self, request, context):
        """Messaging flow
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSentMessages(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetReceivedMessages(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMessageByMid(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MarkMessageRead(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteMessages(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ChatServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'LoginUsername': grpc.unary_unary_rpc_method_handler(
                    servicer.LoginUsername,
                    request_deserializer=Chat__pb2.LoginUsernameRequest.FromString,
                    response_serializer=Chat__pb2.LoginUsernameResponse.SerializeToString,
            ),
            'LoginPassword': grpc.unary_unary_rpc_method_handler(
                    servicer.LoginPassword,
                    request_deserializer=Chat__pb2.LoginPasswordRequest.FromString,
                    response_serializer=Chat__pb2.LoginPasswordResponse.SerializeToString,
            ),
            'DeleteAccount': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteAccount,
                    request_deserializer=Chat__pb2.DeleteAccountRequest.FromString,
                    response_serializer=Chat__pb2.DeleteAccountResponse.SerializeToString,
            ),
            'ListAccounts': grpc.unary_unary_rpc_method_handler(
                    servicer.ListAccounts,
                    request_deserializer=Chat__pb2.ListAccountsRequest.FromString,
                    response_serializer=Chat__pb2.ListAccountsResponse.SerializeToString,
            ),
            'SendMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.SendMessage,
                    request_deserializer=Chat__pb2.SendMessageRequest.FromString,
                    response_serializer=Chat__pb2.SendMessageResponse.SerializeToString,
            ),
            'GetSentMessages': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSentMessages,
                    request_deserializer=Chat__pb2.GetMessagesRequest.FromString,
                    response_serializer=Chat__pb2.GetMessagesResponse.SerializeToString,
            ),
            'GetReceivedMessages': grpc.unary_unary_rpc_method_handler(
                    servicer.GetReceivedMessages,
                    request_deserializer=Chat__pb2.GetMessagesRequest.FromString,
                    response_serializer=Chat__pb2.GetMessagesResponse.SerializeToString,
            ),
            'GetMessageByMid': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMessageByMid,
                    request_deserializer=Chat__pb2.GetMessageRequest.FromString,
                    response_serializer=Chat__pb2.GetMessageResponse.SerializeToString,
            ),
            'MarkMessageRead': grpc.unary_unary_rpc_method_handler(
                    servicer.MarkMessageRead,
                    request_deserializer=Chat__pb2.MarkMessageReadRequest.FromString,
                    response_serializer=Chat__pb2.MarkMessageReadResponse.SerializeToString,
            ),
            'DeleteMessages': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteMessages,
                    request_deserializer=Chat__pb2.DeleteMessagesRequest.FromString,
                    response_serializer=Chat__pb2.DeleteMessagesResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'chat.ChatService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('chat.ChatService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class ChatService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def LoginUsername(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/chat.ChatService/LoginUsername',
            Chat__pb2.LoginUsernameRequest.SerializeToString,
            Chat__pb2.LoginUsernameResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def LoginPassword(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/chat.ChatService/LoginPassword',
            Chat__pb2.LoginPasswordRequest.SerializeToString,
            Chat__pb2.LoginPasswordResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteAccount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/chat.ChatService/DeleteAccount',
            Chat__pb2.DeleteAccountRequest.SerializeToString,
            Chat__pb2.DeleteAccountResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListAccounts(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/chat.ChatService/ListAccounts',
            Chat__pb2.ListAccountsRequest.SerializeToString,
            Chat__pb2.ListAccountsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SendMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/chat.ChatService/SendMessage',
            Chat__pb2.SendMessageRequest.SerializeToString,
            Chat__pb2.SendMessageResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetSentMessages(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/chat.ChatService/GetSentMessages',
            Chat__pb2.GetMessagesRequest.SerializeToString,
            Chat__pb2.GetMessagesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetReceivedMessages(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/chat.ChatService/GetReceivedMessages',
            Chat__pb2.GetMessagesRequest.SerializeToString,
            Chat__pb2.GetMessagesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetMessageByMid(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/chat.ChatService/GetMessageByMid',
            Chat__pb2.GetMessageRequest.SerializeToString,
            Chat__pb2.GetMessageResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def MarkMessageRead(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/chat.ChatService/MarkMessageRead',
            Chat__pb2.MarkMessageReadRequest.SerializeToString,
            Chat__pb2.MarkMessageReadResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteMessages(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/chat.ChatService/DeleteMessages',
            Chat__pb2.DeleteMessagesRequest.SerializeToString,
            Chat__pb2.DeleteMessagesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
